{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api';\n\n// Register user (Step 1)\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/register`, userData);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Registration failed';\n  }\n};\n\n// Update user step (Step 2/3)\nexport const updateUserStep = async (userId, step, userData) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/users/${userId}/step/${step}`, userData);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Update failed';\n  }\n};\n\n// Get user by ID\nexport const getUserById = async userId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || 'Failed to get user';\n  }\n};\n\n// Get user by email\nexport const getUserByEmail = async email => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/users/email/${email}`);\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || 'User not found';\n  }\n};\n\n// Get admin configuration\nexport const getAdminConfig = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/admin/config`);\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || 'Failed to load config';\n  }\n};\n\n// Update admin configuration\nexport const updateAdminConfig = async configData => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/admin/config`, configData);\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || 'Config update failed';\n  }\n};\n\n// Get all users (for data table)\nexport const getAllUsers = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/data/users`);\n    return response.data;\n  } catch (error) {\n    var _error$response7;\n    throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || 'Failed to load users';\n  }\n};\n\n// Get components for specific page\nexport const getComponentsForPage = async pageNumber => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/admin/config/page/${pageNumber}`);\n    return response.data;\n  } catch (error) {\n    var _error$response8;\n    throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || 'Failed to load page components';\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","registerUser","userData","response","post","data","error","_error$response","updateUserStep","userId","step","put","_error$response2","getUserById","get","_error$response3","getUserByEmail","email","_error$response4","getAdminConfig","_error$response5","updateAdminConfig","configData","_error$response6","getAllUsers","_error$response7","getComponentsForPage","pageNumber","_error$response8"],"sources":["C:/Users/udayk/.eclipse/zealthy-frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/api';\r\n\r\n// Register user (Step 1)\r\nexport const registerUser = async (userData) => {\r\n    try {\r\n        const response = await axios.post(`${API_BASE_URL}/users/register`, userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data || 'Registration failed';\r\n    }\r\n};\r\n\r\n// Update user step (Step 2/3)\r\nexport const updateUserStep = async (userId, step, userData) => {\r\n    try {\r\n        const response = await axios.put(`${API_BASE_URL}/users/${userId}/step/${step}`, userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data || 'Update failed';\r\n    }\r\n};\r\n\r\n// Get user by ID\r\nexport const getUserById = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`${API_BASE_URL}/users/${userId}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data || 'Failed to get user';\r\n    }\r\n};\r\n\r\n// Get user by email\r\nexport const getUserByEmail = async (email) => {\r\n    try {\r\n        const response = await axios.get(`${API_BASE_URL}/users/email/${email}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data || 'User not found';\r\n    }\r\n};\r\n\r\n// Get admin configuration\r\nexport const getAdminConfig = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_BASE_URL}/admin/config`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data || 'Failed to load config';\r\n    }\r\n};\r\n\r\n// Update admin configuration\r\nexport const updateAdminConfig = async (configData) => {\r\n    try {\r\n        const response = await axios.put(`${API_BASE_URL}/admin/config`, configData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data || 'Config update failed';\r\n    }\r\n};\r\n\r\n// Get all users (for data table)\r\nexport const getAllUsers = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_BASE_URL}/data/users`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data || 'Failed to load users';\r\n    }\r\n};\r\n\r\n// Get components for specific page\r\nexport const getComponentsForPage = async (pageNumber) => {\r\n    try {\r\n        const response = await axios.get(`${API_BASE_URL}/admin/config/page/${pageNumber}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response?.data || 'Failed to load page components';\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}