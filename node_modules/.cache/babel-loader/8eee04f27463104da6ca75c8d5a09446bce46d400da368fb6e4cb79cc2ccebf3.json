{"ast":null,"code":"// src/utils/validationUtils.js\nimport { User } from '../models/User';\nexport const validateComponents = (components, userData) => {\n  const validationErrors = {};\n  const user = new User(userData);\n  components.forEach(componentType => {\n    switch (componentType) {\n      case 'ABOUT_ME':\n        const aboutMeValidation = user.validateAboutMe();\n        if (!aboutMeValidation.isValid) {\n          validationErrors.aboutMe = aboutMeValidation.message;\n        }\n        break;\n      case 'ADDRESS':\n        const addressValidation = user.validateAddress();\n        if (!addressValidation.isValid) {\n          Object.assign(validationErrors, addressValidation.errors);\n        }\n        break;\n      case 'BIRTHDATE':\n        const birthdateValidation = user.validateBirthdate();\n        if (!birthdateValidation.isValid) {\n          validationErrors.birthdate = birthdateValidation.message;\n        }\n        break;\n      default:\n        break;\n    }\n  });\n  return validationErrors;\n};\nexport const getPageDescription = components => {\n  if (components.length > 1) {\n    return \"All fields are required. Your progress is automatically saved.\";\n  } else if (components.includes('ABOUT_ME')) {\n    return \"Tell us about yourself. Your progress is automatically saved.\";\n  } else if (components.includes('ADDRESS')) {\n    return \"Please provide your address information. Your progress is automatically saved.\";\n  } else if (components.includes('BIRTHDATE')) {\n    return \"Please provide your birthdate. Your progress is automatically saved.\";\n  } else {\n    return \"Your progress is automatically saved.\";\n  }\n};\n\n/**\r\n * Validate a single field using User model validation\r\n */\nexport const validateField = (fieldName, value, allData = {}) => {\n  const userData = {\n    ...allData,\n    [fieldName]: value\n  };\n  const user = new User(userData);\n  switch (fieldName) {\n    case 'email':\n      return user.validateEmail();\n    case 'password':\n      return user.validatePassword();\n    case 'aboutMe':\n      return user.validateAboutMe();\n    case 'birthdate':\n      return user.validateBirthdate();\n    case 'streetAddress':\n    case 'city':\n    case 'state':\n    case 'zip':\n      const addressValidation = user.validateAddress();\n      return {\n        isValid: !addressValidation.errors[fieldName],\n        message: addressValidation.errors[fieldName] || null\n      };\n    default:\n      return {\n        isValid: true,\n        message: null\n      };\n  }\n};\n\n/**\r\n * Get placeholder text for a field\r\n */\nexport const getFieldPlaceholder = (fieldName, required = false) => {\n  const placeholders = {\n    email: 'Enter your email address',\n    password: 'Enter your password (min 6 characters)',\n    aboutMe: 'Tell us about yourself...',\n    streetAddress: 'Street Address',\n    city: 'City',\n    state: 'State',\n    zip: 'ZIP Code',\n    birthdate: 'Select your birthdate'\n  };\n  const placeholder = placeholders[fieldName] || fieldName;\n  return required ? `${placeholder} (Required)` : placeholder;\n};\n\n/**\r\n * Get help text for a field\r\n */\nexport const getFieldHelpText = fieldName => {\n  const helpTexts = {\n    password: 'Password must be at least 6 characters long',\n    aboutMe: 'Tell us about your interests, background, or anything you\\'d like to share',\n    state: 'Use 2-letter state code (e.g., CA)',\n    zip: 'Format: 12345 or 12345-6789',\n    birthdate: 'You must be at least 13 years old'\n  };\n  return helpTexts[fieldName] || null;\n};","map":{"version":3,"names":["User","validateComponents","components","userData","validationErrors","user","forEach","componentType","aboutMeValidation","validateAboutMe","isValid","aboutMe","message","addressValidation","validateAddress","Object","assign","errors","birthdateValidation","validateBirthdate","birthdate","getPageDescription","length","includes","validateField","fieldName","value","allData","validateEmail","validatePassword","getFieldPlaceholder","required","placeholders","email","password","streetAddress","city","state","zip","placeholder","getFieldHelpText","helpTexts"],"sources":["C:/Users/udayk/.eclipse/zealthy-onboarding-frontend/src/utils/validationUtils.js"],"sourcesContent":["// src/utils/validationUtils.js\r\nimport { User } from '../models/User';\r\n\r\nexport const validateComponents = (components, userData) => {\r\n  const validationErrors = {};\r\n  const user = new User(userData);\r\n  \r\n  components.forEach(componentType => {\r\n    switch (componentType) {\r\n      case 'ABOUT_ME':\r\n        const aboutMeValidation = user.validateAboutMe();\r\n        if (!aboutMeValidation.isValid) {\r\n          validationErrors.aboutMe = aboutMeValidation.message;\r\n        }\r\n        break;\r\n        \r\n      case 'ADDRESS':\r\n        const addressValidation = user.validateAddress();\r\n        if (!addressValidation.isValid) {\r\n          Object.assign(validationErrors, addressValidation.errors);\r\n        }\r\n        break;\r\n        \r\n      case 'BIRTHDATE':\r\n        const birthdateValidation = user.validateBirthdate();\r\n        if (!birthdateValidation.isValid) {\r\n          validationErrors.birthdate = birthdateValidation.message;\r\n        }\r\n        break;\r\n        \r\n      default:\r\n        break;\r\n    }\r\n  });\r\n  \r\n  return validationErrors;\r\n};\r\n\r\nexport const getPageDescription = (components) => {\r\n  if (components.length > 1) {\r\n    return \"All fields are required. Your progress is automatically saved.\";\r\n  } else if (components.includes('ABOUT_ME')) {\r\n    return \"Tell us about yourself. Your progress is automatically saved.\";\r\n  } else if (components.includes('ADDRESS')) {\r\n    return \"Please provide your address information. Your progress is automatically saved.\";\r\n  } else if (components.includes('BIRTHDATE')) {\r\n    return \"Please provide your birthdate. Your progress is automatically saved.\";\r\n  } else {\r\n    return \"Your progress is automatically saved.\";\r\n  }\r\n};\r\n\r\n/**\r\n * Validate a single field using User model validation\r\n */\r\nexport const validateField = (fieldName, value, allData = {}) => {\r\n  const userData = { ...allData, [fieldName]: value };\r\n  const user = new User(userData);\r\n\r\n  switch (fieldName) {\r\n    case 'email':\r\n      return user.validateEmail();\r\n    case 'password':\r\n      return user.validatePassword();\r\n    case 'aboutMe':\r\n      return user.validateAboutMe();\r\n    case 'birthdate':\r\n      return user.validateBirthdate();\r\n    case 'streetAddress':\r\n    case 'city':\r\n    case 'state':\r\n    case 'zip':\r\n      const addressValidation = user.validateAddress();\r\n      return {\r\n        isValid: !addressValidation.errors[fieldName],\r\n        message: addressValidation.errors[fieldName] || null\r\n      };\r\n    default:\r\n      return { isValid: true, message: null };\r\n  }\r\n};\r\n\r\n/**\r\n * Get placeholder text for a field\r\n */\r\nexport const getFieldPlaceholder = (fieldName, required = false) => {\r\n  const placeholders = {\r\n    email: 'Enter your email address',\r\n    password: 'Enter your password (min 6 characters)',\r\n    aboutMe: 'Tell us about yourself...',\r\n    streetAddress: 'Street Address',\r\n    city: 'City',\r\n    state: 'State',\r\n    zip: 'ZIP Code',\r\n    birthdate: 'Select your birthdate'\r\n  };\r\n\r\n  const placeholder = placeholders[fieldName] || fieldName;\r\n  return required ? `${placeholder} (Required)` : placeholder;\r\n};\r\n\r\n/**\r\n * Get help text for a field\r\n */\r\nexport const getFieldHelpText = (fieldName) => {\r\n  const helpTexts = {\r\n    password: 'Password must be at least 6 characters long',\r\n    aboutMe: 'Tell us about your interests, background, or anything you\\'d like to share',\r\n    state: 'Use 2-letter state code (e.g., CA)',\r\n    zip: 'Format: 12345 or 12345-6789',\r\n    birthdate: 'You must be at least 13 years old'\r\n  };\r\n\r\n  return helpTexts[fieldName] || null;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}